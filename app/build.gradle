/*
 *     This is the source code of ReadingBox project.
 *     Copyright (C)   Ali Nasrabadi  2018-2018
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.nasrabadiam.readingbox"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        kotlin {
            experimental {
                coroutines "enable"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    //ui
    implementation deps.kotlin.stdlib
    implementation deps.support.app_compat
    implementation deps.constraint_layout
    implementation deps.support.recyclerview
    implementation deps.support.design

    //image loading
    implementation deps.picasso

    //Room ORM
    implementation deps.room.runtime
    kapt deps.room.compiler
    implementation deps.room.testing

    //coroutines
    implementation deps.coroutines.core
    implementation deps.coroutines.android

    //Dagger 2
    implementation deps.dagger.runtime
    kapt deps.dagger.compiler

    //web request
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.mock
    implementation deps.okhttp_logging_interceptor

    //testing
    testImplementation deps.junit
    androidTestImplementation deps.support.annotations
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.robolectric.core

    //memory-leak
//    debugImplementation deps.leakcanary.debug
//    debugImplementation deps.leakcanary.debugfragment
}